apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    details 'verbose'
    filters {
        engines {
            include 'junit-arena'
            include 'junit-jupiter'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            // exclude 'slow'
        }
        includeClassNamePattern '^.*Tests?$'
    }
    // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
    testCompile project(":arena-api")
    testCompile project(":arena-junit")
    testCompile project(":arena-docker")

    api group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'
    testRuntimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'
    compile("org.junit.platform:junit-platform-commons:${junitPlatformVersion}")
    compile("org.junit.platform:junit-platform-engine:${junitPlatformVersion}")

    testCompile 'org.assertj:assertj-core:3.9.0'

    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    // To avoid compiler warnings about @API annotations in JUnit code
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')

    // To use Log4J's LogManager
    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")
}
